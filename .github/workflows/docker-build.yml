name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/baspla/listenbrainz_proxy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true      # load into the local docker daemon for tests
          tags: ${{ env.IMAGE_NAME }}:build
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Move new cache into place (workaround for buildx bug)
      - run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Optional: Run tests against built image
      - name: Test container runs
        run: docker run --rm ${{ env.IMAGE_NAME }}:build uvicorn --version

      # Save image as artifact for push job
      - name: Save image
        run: docker save ${{ env.IMAGE_NAME }}:build | gzip > image.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load image
        run: docker load < image.tar.gz

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push final tags
        run: |
          docker tag ${{ env.IMAGE_NAME }}:build ${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.IMAGE_NAME }}:build ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
